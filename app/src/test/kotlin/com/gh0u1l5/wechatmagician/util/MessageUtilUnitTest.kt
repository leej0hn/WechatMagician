package com.gh0u1l5.wechatmagician.util

import org.junit.Test as Test
import org.junit.Assert.*

class MessageUtilUnitTest {
    @Test fun testEasterEgg() {
        assertEquals(
                "\"test\" 妄图撤回一条消息，啧啧",
                MessageUtil.applyEasterEgg("\"test\" 撤回了一条消息", "妄图撤回一条消息，啧啧"))
    }

    @Test fun testNotifyInfoDelete() {
        assertNull(MessageUtil.notifyInfoDelete(null, byteArrayOf()))
        assertNull(MessageUtil.notifyInfoDelete("", null))
        val msg = MessageUtil.hexStringToBytes
        val expect
        assertEquals(expect, MessageUtil.bytesToHexString(MessageUtil.notifyInfoDelete("[已删除]", msg)))
    }

    @Test fun testNotifyLongInfoDelete() {
        val msg1 = MessageUtil.hexStringToBytes
        val expect
        assertEquals(expect1, MessageUtil.bytesToHexString(MessageUtil.notifyInfoDelete("[已删除]", msg1)))
        val msg2 = MessageUtil.hexStringToBytes
        val expect
        assertEquals(expect2, MessageUtil.bytesToHexString(MessageUtil.notifyInfoDelete("[已删除]", msg2)))
    }

    @Test fun testNotifyReallyLongInfoDelete() {
        val msg = MessageUtil.hexStringToBytes
        val expect
        assertEquals(expect, MessageUtil.bytesToHexString(MessageUtil.notifyInfoDelete("[已删除]", msg)))
    }

    @Test fun testNotifyCommentDelete() {
        assertNull(MessageUtil.notifyCommentDelete(null, byteArrayOf()))
        assertNull(MessageUtil.notifyCommentDelete("", null))
        val msg = MessageUtil.hexStringToBytes("0A12777869645F393534313434353431353731311213777869645F63707874653974717562336F32321A0CE789A7E4BA91E5A4A9E699AF2209E69E97E4BFAEE4B9902802301E38A5C8ADC50542365BE598BFE593885D5BE68D82E884B85D5BE5A5B8E7AC915D5BE69CBAE699BA5D5BE79AB1E79C895D5BE880B65DE59190E59190E59190480050C10158016000680072020800")
        val expect = "0A12777869645F393534313434353431353731311213777869645F63707874653974717562336F32321A0CE789A7E4BA91E5A4A9E699AF2209E69E97E4BFAEE4B9902802301E38A5C8ADC50542425BE5B7B2E588A0E999A45D205BE598BFE593885D5BE68D82E884B85D5BE5A5B8E7AC915D5BE69CBAE699BA5D5BE79AB1E79C895D5BE880B65DE59190E59190E59190480050C10158016000680072020800"
        assertEquals(expect, MessageUtil.bytesToHexString(MessageUtil.notifyCommentDelete("[已删除]", msg)))
    }

    @Test fun testSnsMsg() {
        assertArrayEquals(MessageUtil.hexStringToBytes("03"), MessageUtil.encodeMsgSize(0x03))
        assertArrayEquals(MessageUtil.hexStringToBytes("7F"), MessageUtil.encodeMsgSize(0x7F))
        assertArrayEquals(MessageUtil.hexStringToBytes("8001"), MessageUtil.encodeMsgSize(0x80))
        assertArrayEquals(MessageUtil.hexStringToBytes("8401"), MessageUtil.encodeMsgSize(0x84))
        assertArrayEquals(MessageUtil.hexStringToBytes("8002"), MessageUtil.encodeMsgSize(0x100))
        assertArrayEquals(MessageUtil.hexStringToBytes("8004"), MessageUtil.encodeMsgSize(0x200))
        assertArrayEquals(MessageUtil.hexStringToBytes("F803"), MessageUtil.encodeMsgSize(0x1F8))
        assertEquals(Pair(1, 3), MessageUtil.decodeMsgSize(0, MessageUtil.hexStringToBytes("03FF")))
        assertEquals(Pair(2, 128), MessageUtil.decodeMsgSize(0, MessageUtil.hexStringToBytes("8001")))
        assertEquals(Pair(2, 132), MessageUtil.decodeMsgSize(0, MessageUtil.hexStringToBytes("8401")))
        assertEquals(Pair(2, 384), MessageUtil.decodeMsgSize(0, MessageUtil.hexStringToBytes("8003")))
        assertEquals(Pair(2, 504), MessageUtil.decodeMsgSize(0, MessageUtil.hexStringToBytes("F803")))
        assertEquals(Pair(2, 512), MessageUtil.decodeMsgSize(0, MessageUtil.hexStringToBytes("8004")))
    }

    @Test fun testBytesToHexString() {
        assertEquals("", MessageUtil.bytesToHexString(null))
        assertEquals("", MessageUtil.bytesToHexString(byteArrayOf()))
        assertEquals("0102030405060708090A0B0C0D0E0F", MessageUtil.bytesToHexString(byteArrayOf(0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09, 0x0A, 0x0B, 0x0C, 0x0D, 0x0E, 0x0F)))
        assertEquals("F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF", MessageUtil.bytesToHexString(byteArrayOf(-0x0F, -0x0E, -0x0D, -0x0C, -0x0B, -0x0A, -0x09, -0x08, -0x07, -0x06, -0x05, -0x04, -0x03, -0x02, -0x01)))
    }

    @Test fun testHexStringToBytes() {
        assertArrayEquals(byteArrayOf(), MessageUtil.hexStringToBytes(null))
        assertArrayEquals(byteArrayOf(), MessageUtil.hexStringToBytes(""))
        assertArrayEquals(byteArrayOf(0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09, 0x0A, 0x0B, 0x0C, 0x0D, 0x0E, 0x0F), MessageUtil.hexStringToBytes("0102030405060708090A0B0C0D0E0F"))
        assertArrayEquals(byteArrayOf(-0x0F, -0x0E, -0x0D, -0x0C, -0x0B, -0x0A, -0x09, -0x08, -0x07, -0x06, -0x05, -0x04, -0x03, -0x02, -0x01), MessageUtil.hexStringToBytes("F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF"))
    }
}